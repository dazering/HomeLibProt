// <auto-generated />
using HomeLib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeLib.Migrations
{
    [DbContext(typeof(LibraryContex))]
    [Migration("20190517105556_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeLib.Models.Authtor", b =>
                {
                    b.Property<string>("FirstName");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("none");

                    b.Property<string>("LastName");

                    b.Property<long>("Id");

                    b.HasKey("FirstName", "MiddleName", "LastName");

                    b.ToTable("Authtors");
                });

            modelBuilder.Entity("HomeLib.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Annotation");

                    b.Property<string>("AuthtorFirstName")
                        .IsRequired();

                    b.Property<string>("AuthtorLastName")
                        .IsRequired();

                    b.Property<string>("AuthtorMiddleName")
                        .IsRequired();

                    b.Property<string>("Cover");

                    b.Property<string>("Isbn");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.HasIndex("AuthtorFirstName", "AuthtorMiddleName", "AuthtorLastName");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("HomeLib.Models.Book", b =>
                {
                    b.HasOne("HomeLib.Models.Authtor", "Authtor")
                        .WithMany("Books")
                        .HasForeignKey("AuthtorFirstName", "AuthtorMiddleName", "AuthtorLastName")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
